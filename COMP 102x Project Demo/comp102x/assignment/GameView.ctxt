#BlueJ class context
comment0.params=
comment0.target=GameView()
comment0.text=\n\ Constructs\ a\ view\ of\ the\ game.\n
comment1.params=
comment1.target=void\ showStartScreen()
comment1.text=\n\ Shows\ the\ start\ up\ screen\ of\ the\ game\ for\ a\ predefined\ time.\n
comment10.params=tilt\ minTilt\ maxTilt
comment10.target=int\ calculateFinalFootballY(double,\ int,\ int)
comment10.text=\n\ Calculates\ the\ final\ y\ position\ of\ the\ football\ image\ by\ interpolation.\n\ @param\ tilt\ the\ current\ tilt\ angle\ of\ the\ arrow.\n\ @param\ minTilt\ the\ minimum\ tilt\ angle\ allowed\ for\ the\ arrow.\n\ @param\ maxTilt\ the\ maximum\ tilt\ angle\ allowed\ for\ the\ arrow.\n\ @return\ the\ final\ y\ position\ of\ the\ football\ calculated.\n
comment11.params=newFootballImage
comment11.target=void\ replaceFootballImage(comp102x.ColorImage)
comment11.text=\n\ Replaces\ the\ currently\ showing\ football\ image\ by\ a\ new\ image.\n\ @param\ newFootballImage\ the\ new\ shooting\ image\ to\ be\ updated\ to.\n
comment12.params=row\ col
comment12.target=void\ showExplosionImage(int,\ int)
comment12.text=\n\ Shows\ the\ explosion\ image\ at\ a\ specific\ goal\ location.\n\ @param\ row\ the\ row\ of\ the\ goal.\ \n\ @param\ col\ the\ column\ of\ the\ goal.\n
comment13.params=
comment13.target=void\ hideExplosionImage()
comment13.text=\n\ Hides\ the\ explosion\ image.\n
comment14.params=
comment14.target=void\ hideFootballImage()
comment14.text=\n\ Hides\ the\ current\ football\ image.\n
comment15.params=
comment15.target=void\ resetFootballImage()
comment15.text=\n\ Resets\ the\ current\ football\ image\ to\ be\ the\ football\ image\ loaded\ on\ the\n\ arrow.\n
comment16.params=goals
comment16.target=void\ updateGoalImages(Goal[][])
comment16.text=\n\ Updates\ the\ goal\ images\ according\ to\ the\ current\ status\ of\ the\ goals.\n\ @param\ goals\ a\ 2D\ array\ storing\ the\ goals\ and\ their\ status.\n
comment17.params=
comment17.target=int\ getGoalImageWidth()
comment17.text=\n\ Returns\ the\ width\ of\ a\ goal\ image.\n\ \n\ Assumption\:\ all\ the\ goals\ have\ the\ same\ width.\n\ @return\ the\ width\ of\ a\ goal\ image.\n
comment18.params=
comment18.target=int\ getGoalImageHeight()
comment18.text=\n\ Returns\ the\ height\ of\ a\ goal\ image.\n\ \n\ Assumption\:\ all\ the\ goals\ have\ the\ same\ height.\n\ @return\ the\ height\ of\ a\ goal\ image.\n
comment19.params=score
comment19.target=void\ updateScore(int)
comment19.text=\n\ Updates\ the\ graphical\ score\ display.\n\ @param\ score\ the\ score\ to\ be\ displayed.\n
comment2.params=
comment2.target=void\ showStartGameScreen()
comment2.text=\n\ Shows\ the\ start\ game\ screen\ for\ a\ predefined\ time.\ \n
comment20.params=time
comment20.target=void\ updateTime(int)
comment20.text=\n\ Updates\ the\ graphical\ time\ left\ display.\n\ @param\ time\ the\ time\ left\ to\ be\ displayed.\n
comment21.params=listener
comment21.target=void\ addMouseListener(java.awt.event.MouseListener)
comment21.text=\n\ Adds\ a\ MouseListener\ to\ the\ canvas.\n\ @param\ listener\ the\ MouseListener\ to\ be\ added\ to\ the\ canvas.\n
comment22.params=listener
comment22.target=void\ addMouseMotionListener(java.awt.event.MouseMotionListener)
comment22.text=\n\ Adds\ a\ MouseMotionListener\ to\ the\ canvas.\n\ @param\ listener\ the\ MouseMotionListener\ to\ be\ added\ to\ the\ canvas.\n
comment23.params=milliseconds
comment23.target=void\ pause(int)
comment23.text=\n\ Pauses\ the\ current\ thread\ for\ an\ approximate\ amount\ of\ time.\n\ @param\ milliseconds\ the\ designated\ time\ for\ the\ thread\ to\ be\ paused.\n
comment24.params=image\ scale
comment24.target=void\ scaleImageAtCenter(comp102x.ColorImage,\ double)
comment24.text=\n\ Scales\ an\ image\ at\ the\ center.\n\ @param\ image\ the\ image\ to\ be\ scaled.\n\ @param\ scale\ the\ desire\ scale\ to\ be\ updated\ to.\n
comment25.params=image
comment25.target=comp102x.ColorImage\ createResizedColorImage(comp102x.ColorImage)
comment26.params=bufferedImage
comment26.target=comp102x.ColorImage\ BufferedImage2ColorImage(java.awt.image.BufferedImage)
comment27.params=image
comment27.target=java.awt.image.BufferedImage\ createBufferedImage(comp102x.ColorImage)
comment28.params=alpha\ red\ green\ blue
comment28.target=int\ toRGB(int,\ int,\ int,\ int)
comment3.params=
comment3.target=void\ showGameScreen()
comment3.text=\n\ Shows\ the\ gaming\ screen,\ where\ playing\ can\ see\ the\ goals,\ arrow,\n\ football,\ ...\ etc.\n
comment4.params=
comment4.target=void\ showEndGameScreen()
comment4.text=\n\ Shows\ the\ end\ game\ screen.\n
comment5.params=x\ y
comment5.target=void\ updateArrowImage(int,\ int)
comment5.text=\n\ Updates\ the\ graphical\ representation\ of\ the\ arrow\ image,\ after\ the\ mouse\n\ has\ moved.\n\ \n\ This\ method\ updates\ the\ rotation,\ scaling\ and\ y\ position\ of\ the\ arrow\n\ image.\ It\ makes\ use\ of\ the\ canvas\ screen\ size\ and\ some\ parameters\ for\n\ interpolation\ and\ then\ update\ the\ image\ accordingly.\n\ \n\ @param\ x\ the\ x\ position\ of\ the\ mouse.\n\ @param\ y\ the\ y\ position\ of\ the\ mouse.\n
comment6.params=
comment6.target=void\ updateFootballImage()
comment6.text=\n\ Updates\ the\ position\ of\ the\ football\ image\ on\ the\ arrow\ after\ the\ arrow\n\ has\ been\ moved.\n\ \n\ This\ method\ make\ use\ of\ the\ current\ arrow\ position,\ scaling\ and\ rotation\n\ to\ update\ the\ loaded\ football\ image\ accordingly.\n
comment7.params=
comment7.target=int\ getloadedFootballX()
comment7.text=\n\ Returns\ the\ x\ position\ of\ the\ football\ image\ loaded\ on\ the\ arrow.\ \n\ @return\ the\ x\ position\ of\ the\ football\ image\ loaded\ on\ the\ arrow.\n
comment8.params=
comment8.target=int\ getLoadedFootballY()
comment8.text=\n\ Returns\ the\ y\ position\ of\ the\ football\ image\ loaded\ on\ the\ arrow.\n\ @return\ the\ y\ position\ of\ the\ football\ image\ loaded\ on\ the\ arrow.\n
comment9.params=pan\ minPan\ maxPan
comment9.target=int\ calculateFinalFootballX(double,\ int,\ int)
comment9.text=\n\ Calculates\ the\ final\ x\ position\ of\ the\ football\ image\ by\ interpolation.\n\ @param\ pan\ the\ current\ pan\ angle\ of\ the\ arrow.\n\ @param\ minPan\ the\ minimum\ pan\ angle\ allowed\ for\ the\ arrow.\n\ @param\ maxPan\ the\ maximum\ pan\ angle\ allowed\ for\ the\ arrow.\n\ @return\ the\ final\ x\ position\ of\ the\ football\ calculated.\n
numComments=29
