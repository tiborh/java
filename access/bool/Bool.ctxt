#BlueJ class context
comment0.params=
comment0.target=Bool()
comment0.text=\n\ Constructor\ for\ objects\ of\ class\ Bool\n
comment1.params=initState
comment1.target=Bool(java.lang.Boolean)
comment1.text=\n\ Initial\ state\ can\ be\ set\ with\ a\ Boolean\ value\n\ \n\ @param\ initState\ initial\ state\n
comment10.params=obj
comment10.target=boolean\ equals(java.lang.Object)
comment11.params=
comment11.target=int\ hashCode()
comment12.params=argv
comment12.target=void\ main(java.lang.String[])
comment12.text=\n\ A\ few\ simple\ operations\ to\ show\ how\ the\ object\ can\ be\ used.\n\ \n\ @param\ argv\ arguments\ are\ not\ used\n
comment2.params=other
comment2.target=Bool(Bool)
comment2.text=\n\ Initial\ state\ can\ be\ set\ with\ another\ Bool\ object\n\ \n\ @param\ another\ Bool\ object\n
comment3.params=initState
comment3.target=Bool(int)
comment3.text=\n\ Initial\ state\ can\ be\ set\ with\ an\ integer\n\ 0\:\ false\n\ other\ values\:\ true\n\ \n\ @param\ initState\ initial\ state\n
comment4.params=other
comment4.target=Bool\ and(Bool)
comment4.text=\n\ The\ "and"\ logical\ operation\ between\ two\ Bool\ objects\n\ \n\ @param\ other\ the\ other\ one\ of\ the\ compared\n\ @return\ logical\ "and"\ result\ in\ as\ a\ Bool\ object\n
comment5.params=other
comment5.target=Bool\ or(Bool)
comment5.text=\n\ The\ "or"\ logical\ operation\ between\ two\ Bool\ objects\n\ \n\ @param\ other\ the\ other\ one\ of\ the\ compared\n\ @return\ logical\ "or"\ result\ in\ as\ a\ Bool\ object\n
comment6.params=
comment6.target=Bool\ not()
comment6.text=\n\ The\ "not"\ logical\ operation\ between\ two\ Bool\ objects\n\ \n\ @param\ one\ one\ of\ the\ compared\n\ @return\ logical\ "or"\ result\ in\ as\ a\ Bool\ object\n
comment7.params=
comment7.target=java.lang.Boolean\ isTrue()
comment7.text=\n\ Get\ information\ about\ the\ state.\n\ \n\ @return\ boolean\ value\ reflecting\ the\ state\ of\ the\ Bool\ object\n
comment8.params=
comment8.target=Bool\ clone()
comment9.params=
comment9.target=java.lang.String\ toString()
comment9.text=\n\ Get\ the\ state\ as\ a\ string.\n\ \n\ @return\ state\ as\ a\ string\n
numComments=13
