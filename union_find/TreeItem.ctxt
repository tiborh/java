#BlueJ class context
comment0.params=id
comment0.target=TreeItem(int)
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ TreeItem\:\r\n\ when\ the\ object\ is\ created,\ the\ item\ points\ at\ itself\r\n\ both\ as\ an\ up\ and\ down\ item.\ If\ it\ remains\ so,\ the\ item\ is\ unconnected.\r\n
comment1.params=
comment1.target=int\ getID()
comment1.text=\r\n\ get\ the\ ID\ of\ the\ current\ treeItem\r\n\ \r\n\ @return\ the\ ID\ of\ the\ current\ treeItem\r\n
comment10.params=
comment10.target=boolean\ isUnconnected()
comment10.text=\r\n\ Checks\ if\ the\ item\ is\ unconnected\ to\ other\ items\r\n\ \r\n\ @return\ true\ if\ up\ and\ down\ ID's\ are\ the\ same\ \r\n\ \ \ \ \ \ \ \ \ false\ if\ downID\ and\ upID\ are\ different\r\n
comment11.params=
comment11.target=boolean\ isRootItem()
comment11.text=\r\n\ Checks\ if\ current\ item\ is\ at\ the\ root\ of\ a\ chain\r\n\ \r\n\ @return\ true\ if\ current\ item\ is\ a\ root\ item\r\n\ \ \ \ \ \ \ \ \ false\ if\ current\ item\ is\ not\ a\ root\ item\r\n
comment12.params=other
comment12.target=boolean\ equals(TreeItem)
comment12.text=\r\n\ Examines\ the\ equality\ of\ two\ TreeItems\r\n\ \r\n\ return\ true\ if\ the\ two\ references\ refer\ to\ the\ same\ object\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ or\ their\ itemID's\ are\ equal\r\n\ \ \ \ \ \ \ \ false\ otherwise.\r\n
comment13.params=argv
comment13.target=void\ main(java.lang.String[])
comment13.text=\r\n\ Checks\ if\ everything\ works\ as\ it\ should\r\n\ \r\n\ @param\ argv\ currently\ no\ command\ line\ argument\ is\ processed\r\n
comment2.params=id
comment2.target=int\ getUpID(int)
comment2.text=\r\n\ Get\ the\ pointer\ to\ the\ item\ rootwise\r\n\ \r\n\ @param\ \ id\ \ the\ ID\ of\ the\ item\ closer\ to\ the\ root\ element\ (than\ the\ current\ element)\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ if\ this\ ID\ is\ is\ the\ same\ as\ the\ itemID,\ then\ the\ current\ element\ is\ the\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ root\ element.\r\n
comment3.params=anItem
comment3.target=void\ setUpItem(TreeItem)
comment3.text=\r\n\ Add\ an\ item\ as\ the\ upItem\r\n\ \r\n\ @param\ \ anItem\ \ a\ treeItem\ to\ add\ as\ upItem\r\n
comment4.params=id
comment4.target=void\ setUpID(int)
comment4.text=\r\n\ Set\ the\ pointer\ to\ the\ item\ rootwise\r\n\ \r\n\ @param\ \ id\ \ the\ ID\ of\ the\ item\ closer\ to\ the\ root\ element\ (than\ the\ current\ element)\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ if\ this\ ID\ is\ is\ the\ same\ as\ the\ itemID,\ then\ the\ current\ element\ is\ the\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ root\ element.\r\n
comment5.params=
comment5.target=java.lang.String\ getDownIDs()
comment5.text=\r\n\ Get\ the\ pointer\ to\ the\ item\ rootwise\r\n\ \r\n\ @return\ \ the\ values\ of\ ids\ of\ immediate\ down\ the\ tree\ IDs\ as\ a\ string\r\n
comment6.params=id
comment6.target=boolean\ isDownID(int)
comment6.text=\r\n\ checks\ if\ id\ is\ in\ the\ downID\ set\r\n\ \r\n\ @param\ id\ an\ itemID\ to\ check\r\n
comment7.params=anItem
comment7.target=void\ addDownItem(TreeItem)
comment7.text=\r\n\ Add\ an\ item\ as\ down\ item\ in\ the\ item\ hierarchy\r\n\ \r\n\ @param\ \ anItem\ an\ item\ to\ add\ as\ a\ down\ item\ in\ the\ tree\r\n
comment8.params=id
comment8.target=void\ addDownID(int)
comment8.text=\r\n\ Add\ an\ ID\ as\ downID\ to\ downIDs\ set\r\n\ \r\n\ @param\ \ id\ \ the\ ID\ of\ the\ item\ further\ from\ the\ root\ element\ (than\ the\ current\ element)\r\n
comment9.params=id
comment9.target=void\ removeDownID(int)
comment9.text=\r\n\ Remove\ an\ ID\ from\ downIDs\ set\r\n\ \r\n\ @param\ \ id\ \ the\ ID\ of\ the\ item\ further\ from\ the\ root\ element\ (than\ the\ current\ element)\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ If\ id\ is\ not\ in\ the\ set,\ Error\ is\ logged.\ \r\n
numComments=14
